services:

  jaeger:
    image: jaegertracing/all-in-one:1.41
    container_name: jaeger
    ports:
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"
      - "4317:4317" # gRPC
      - "4318:4318" # HTTP
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411
      COLLECTOR_OTLP_ENABLED: true
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:16686/api/traces" ]
      interval: 10s
      timeout: 5s
      retries: 5
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "$REDIS_PORT:6379"
    volumes:
      - redis_data:/data
    command: >
      --requirepass ${REDIS_AUTH:-redis123}
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5

  neo4j:
    image: neo4j:5.26
    container_name: neo4j
    env_file:
      - .env
    ports:
      - "7687:7687"
      - "7474:7474"
    volumes:
      - neo4j_data:/var/lib/neo4j/data
      - neo4j_logs:/var/lib/neo4j/logs
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
  neo4j-test:
    image: neo4j:5.26
    container_name: neo4j-test
    env_file:
      - .env
    volumes:
      - neo4j_test_data:/var/lib/neo4j/data
      - neo4j_logs:/var/lib/neo4j/logs
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1" ]
      interval: 5s
      timeout: 5s
      retries: 5
  dev:
    image: kg-builder-dev:latest
    container_name: kg-builder-dev
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      neo4j:
        condition: service_healthy
      redis:
        condition: service_healthy
      jaeger:
        condition: service_started
    volumes:
      - .:/app
      - /app/.venv
    models:
      - llm

  test:
    build:
      context: .
      dockerfile: Dockerfile
      target: test
    image: kg-builder-test:latest
    container_name: kg-builder-test
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
    depends_on:
      neo4j-test:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/.venv
    command: uv run pytest --maxfail=1 --disable-warnings -q
  prod:
    image: kg-builder-prod:latest
    container_name: kg-builder-prod
    build:
      context: .
      dockerfile: Dockerfile
      target: prod
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
    ports:
      - "8001:8000"
    depends_on:
      neo4j:
        condition: service_healthy
      redis:
        condition: service_healthy

    command: [ "/app/.venv/bin/gunicorn", "-w", "4", "-k", "uvicorn.workers.UvicornWorker", "-b", "0.0.0.0:8000", "api:app", "--log-level", "debug" ]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: dev
    image: kg-builder-frontend:latest
    container_name: kg-builder-frontend
    environment:
      - VITE_API_BASE=http://localhost:8000
    ports:
      - "5173:5173"
    depends_on:
      dev:
        condition: service_started
    volumes:
      - ./frontend:/app
      - /app/node_modules

volumes:
  neo4j_data:
    driver: local
  redis_data:
    driver: local
  neo4j_test_data:
    driver: local
  neo4j_logs:
    driver: local

models:
  llm:
    model: ai/smollm2 # has a small context window
    context_size: 8192
  # embedding-model:
  #   model: ai/all-minilm
