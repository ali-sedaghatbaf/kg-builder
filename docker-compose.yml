services:
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "$REDIS_PORT:6379"
    volumes:
      - redis_data:/data
    command: >
      --requirepass ${REDIS_AUTH:-myredissecret}
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - shared
  neo4j:
    image: neo4j:5.26
    container_name: neo4j
    env_file:
      - .env
    ports:
      - "7687:7687"
      - "7474:7474"
    volumes:
      - neo4j_data:/var/lib/neo4j/data
      - neo4j_logs:/var/lib/neo4j/logs
    healthcheck:
      test: [ "CMD", "cypher-shell", "-u", "${NEO4J_USER}", "-p", "${NEO4J_PASSWORD}", "--encryption=false", "RETURN 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
  neo4j-test:
    image: neo4j:5.26
    container_name: neo4j-test
    environment:
      - NEO4J_USER:"neo4j"
      - NEO4J_PASSWORD:"neo4j123"
    volumes:
      - neo4j_test_data:/var/lib/neo4j/data
      - neo4j_logs:/var/lib/neo4j/logs
    healthcheck:
      test: [ "CMD", "cypher-shell", "-u", "${NEO4J_USER}", "-p", "${NEO4J_PASSWORD}", "--encryption=false", "RETURN 1" ]
      interval: 5s
      timeout: 5s
      retries: 5
  dev:
    image: kg-builder-dev:latest
    container_name: kg-builder-dev
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      neo4j:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/.venv

  test:
    build:
      context: .
      dockerfile: Dockerfile
      target: test
    image: kg-builder-test:latest
    container_name: kg-builder-test
    env_file:
      - .env
    depends_on:
      neo4j-test:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/.venv
    command: uv run pytest --maxfail=1 --disable-warnings -q
  prod:
    image: kg-builder-prod:latest
    container_name: kg-builder-prod
    build:
      context: .
      dockerfile: Dockerfile
      target: prod
    env_file:
      - .env
    ports:
      - "8001:8000"
    depends_on:
      neo4j:
        condition: service_healthy
      redis:
        condition: service_healthy

    command: [ "/app/.venv/bin/gunicorn", "-w", "4", "-k", "uvicorn.workers.UvicornWorker", "-b", "0.0.0.0:8000", "src.api:app", "--log-level", "debug" ]

volumes:
  neo4j_data:
    driver: local
  redis_data:
    driver: local
  neo4j_test_data:
    driver: local
  neo4j_logs:
    driver: local

networks:
  shared:
    external: true
