

services:
  redis:
    image: redis:8-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  db:
    image: neo4j:5.26
    container_name: neo4j
    env_file:
      - .env
    ports:
      - "7687:7687"
      - "7474:7474"
    volumes:
      - db_data:/var/lib/neo4j/data
      - db_logs:/var/lib/neo4j/logs
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "${APP_NEO4J_USER}", "-p", "${APP_NEO4J_PASSWORD}", "--encryption=false", "RETURN 1"]
      interval: 10s
      timeout: 5s
      retries: 5
  db-test:
    image: neo4j:5.26
    container_name: neo4j-test
    env_file:
      - .env
    volumes:
      - db_test_data:/var/lib/neo4j/data
      - db_logs:/var/lib/neo4j/logs
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "${APP_NEO4J_USER}", "-p", "${APP_NEO4J_PASSWORD}", "--encryption=false", "RETURN 1"]
      interval: 5s
      timeout: 5s
      retries: 5
  dev:
    image: kg-builder-dev:latest
    container_name: kg-builder-dev
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      db: 
        condition: service_healthy 
      redis: 
        condition: service_healthy 
    volumes:
      - .:/app
      - /app/.venv
  
  test:
    build:
      context: .
      dockerfile: Dockerfile
      target: test
    image: kg-builder-test:latest
    container_name: kg-builder-test
    env_file:
      - .env.test
    depends_on:
      db-test:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/.venv
    command: uv run pytest --maxfail=1 --disable-warnings -q
  prod:
    image: kg-builder-prod:latest
    container_name: kg-builder-prod
    build:
      context: .
      dockerfile: Dockerfile
      target: prod
    env_file:
      - .env
    ports:
      - "8001:8000"
    depends_on:
      db: 
        condition: service_healthy 
      redis: 
        condition: service_healthy 
    
      
    command: ["/app/.venv/bin/gunicorn", "-w", "4", "-k", "uvicorn.workers.UvicornWorker", "-b", "0.0.0.0:8000", "src.api:app", "--log-level", "debug"]


volumes:
  db_data:
    driver: local
  redis_data:
    driver: local
  db_test_data:
    driver: local
  db_logs:
    driver: local
